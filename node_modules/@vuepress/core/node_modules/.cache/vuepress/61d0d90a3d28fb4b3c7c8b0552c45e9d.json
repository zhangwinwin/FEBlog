{"remainingRequest":"/Users/apple/Desktop/project/FEBlog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/Desktop/project/FEBlog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/apple/Desktop/project/FEBlog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/apple/Desktop/project/FEBlog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/apple/Desktop/project/FEBlog/docs/frontend/twentyfour.md?vue&type=template&id=1bd22baf&","dependencies":[{"path":"/Users/apple/Desktop/project/FEBlog/docs/frontend/twentyfour.md","mtime":1645860544516},{"path":"/Users/apple/Desktop/project/FEBlog/node_modules/cache-loader/dist/cjs.js","mtime":1645789481159},{"path":"/Users/apple/Desktop/project/FEBlog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645235108752},{"path":"/Users/apple/Desktop/project/FEBlog/node_modules/cache-loader/dist/cjs.js","mtime":1645789481159},{"path":"/Users/apple/Desktop/project/FEBlog/node_modules/vue-loader/lib/index.js","mtime":1645235108752},{"path":"/Users/apple/Desktop/project/FEBlog/node_modules/@vuepress/markdown-loader/index.js","mtime":1645789481495}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c(
        "section",
        {
          staticStyle: {
            "font-size": "16px",
            padding: "0 10px",
            "word-spacing": "0px",
            "word-break": "break-word",
            "word-wrap": "break-word",
            "text-align": "left",
            "line-height": "1.75",
            color: "#595959",
            "font-family":
              "Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light",
            "letter-spacing": "2px",
            "background-image":
              "linear-gradient(90deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%), linear-gradient(360deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%)",
            "background-size": "20px 20px",
            "background-position": "center center",
          },
          attrs: {
            id: "nice",
            "data-tool": "mdnice编辑器",
            "data-website": "https://www.mdnice.com",
          },
        },
        [
          _c(
            "h2",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                "font-weight": "bold",
                color: "black",
                "font-size": "22px",
                "text-align": "left",
                margin: "20px 10px 0px 0px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "font-size": "18px",
                    "font-weight": "bold",
                    display: "inline-block",
                    "padding-left": "10px",
                    "border-left": "5px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("前言")]
              ),
              _c("span", { staticClass: "suffix" }),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("最近一直在阅读"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v(
                "的源码，发现了几个实战中用得上的小技巧，下面跟大家分享一下。"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("同时也可以阅读我之前写的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v("文章"),
            ]
          ),
          _vm._v(" "),
          _c(
            "ul",
            {
              staticStyle: {
                "margin-top": "8px",
                "margin-bottom": "8px",
                "padding-left": "25px",
                "font-size": "15px",
                color: "#595959",
                "list-style-type": "circle",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("li", [
                _c(
                  "section",
                  {
                    staticStyle: {
                      "margin-top": "5px",
                      "margin-bottom": "5px",
                      "line-height": "26px",
                      "text-align": "left",
                      "font-size": "14px",
                      "font-weight": "normal",
                      color: "#595959",
                    },
                  },
                  [
                    _c(
                      "a",
                      {
                        staticStyle: {
                          "text-decoration": "none",
                          "word-wrap": "break-word",
                          color: "#664D9D",
                          "font-weight": "normal",
                          "border-bottom": "1px solid #664D9D",
                        },
                        attrs: {
                          href: "https://juejin.im/post/6844904132193566728",
                        },
                      },
                      [_vm._v('vue开发中的"骚操作"')]
                    ),
                  ]
                ),
              ]),
              _c("li", [
                _c(
                  "section",
                  {
                    staticStyle: {
                      "margin-top": "5px",
                      "margin-bottom": "5px",
                      "line-height": "26px",
                      "text-align": "left",
                      "font-size": "14px",
                      "font-weight": "normal",
                      color: "#595959",
                    },
                  },
                  [
                    _c(
                      "a",
                      {
                        staticStyle: {
                          "text-decoration": "none",
                          "word-wrap": "break-word",
                          color: "#664D9D",
                          "font-weight": "normal",
                          "border-bottom": "1px solid #664D9D",
                        },
                        attrs: {
                          href: "https://juejin.im/post/6854573213712973832",
                        },
                      },
                      [_vm._v("挖掘隐藏在源码中的Vue技巧！")]
                    ),
                  ]
                ),
              ]),
              _c("li", [
                _c(
                  "section",
                  {
                    staticStyle: {
                      "margin-top": "5px",
                      "margin-bottom": "5px",
                      "line-height": "26px",
                      "text-align": "left",
                      "font-size": "14px",
                      "font-weight": "normal",
                      color: "#595959",
                    },
                  },
                  [
                    _c(
                      "a",
                      {
                        staticStyle: {
                          "text-decoration": "none",
                          "word-wrap": "break-word",
                          color: "#664D9D",
                          "font-weight": "normal",
                          "border-bottom": "1px solid #664D9D",
                        },
                        attrs: {
                          href: "https://juejin.im/post/6844904202431365128",
                        },
                      },
                      [_vm._v("抽丝剥茧般的阅读源码，将$nextTick()拉下神坛！")]
                    ),
                  ]
                ),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "h2",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                "font-weight": "bold",
                color: "black",
                "font-size": "22px",
                "text-align": "left",
                margin: "20px 10px 0px 0px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "font-size": "18px",
                    "font-weight": "bold",
                    display: "inline-block",
                    "padding-left": "10px",
                    "border-left": "5px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("隐藏在源码中的技巧")]
              ),
              _c("span", { staticClass: "suffix" }),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("在实例化"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v("时，首先调用的是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue.prototype._init")]
              ),
              _vm._v("方法，而在此方法中"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("mergeOptions()")]
              ),
              _vm._v("方法返回的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("options")]
              ),
              _vm._v("将运用在所有的初始化函数中。也就是如下代码："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("vm.$options = mergeOptions("),
                  _c("br"),
                  _vm._v(" resolveConstructorOptions(vm.coustructor),"),
                  _c("br"),
                  _vm._v("    options || {},"),
                  _c("br"),
                  _vm._v("    vm"),
                  _c("br"),
                  _vm._v(")"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("其中"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("mergeOptions")]
              ),
              _vm._v("方法在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("core/util/options.js")]
              ),
              _vm._v("文件中，最后这个方法返回的是一个"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("options")]
              ),
              _vm._v("对象。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" options"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("这就说明了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("mergeOptions")]
              ),
              _vm._v("方法最终将合并处理后的选项返回，并以该返回值作为"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm.$options")]
              ),
              _vm._v("的值。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "h3",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                color: "black",
                "font-size": "16px",
                "font-weight": "bold",
                "text-align": "center",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "border-bottom": "2px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("自定义选项的合并方法")]
              ),
              _c("span", {
                staticClass: "suffix",
                staticStyle: { display: "none" },
              }),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("如果我们在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("options")]
              ),
              _vm._v("中添加自定义的属性会怎么样？来自官方的例子："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("new")]
                  ),
                  _vm._v(" Vue({"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("customOption")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'foo'")]
                  ),
                  _vm._v(","),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("created")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" ("),
                      _c("span", {
                        staticClass: "hljs-params",
                        staticStyle: {
                          color: "#DCDCDC",
                          "line-height": "26px",
                        },
                      }),
                      _vm._v(") "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("console")]
                  ),
                  _vm._v(".log("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("this")]
                  ),
                  _vm._v(".$options.customOption) "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// => 'foo'")]
                  ),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("})"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("在创建"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v("实例的时候传递了一个自定义选项："),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("customOptions")]
              ),
              _vm._v("，在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("created")]
              ),
              _vm._v("中可以通过"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("this.$options.customOption")]
              ),
              _vm._v("进行访问。原理其实就是使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("mergeOptions")]
              ),
              _vm._v(
                "函数对自定义选项进行合并处理。对于自定义选项的合并，采用的是默认的合并策略："
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 当一个选项没有对应的策略函数时，使用默认策略")]
                  ),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" strat = strats[key] || defaultStrat"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("defaultStrat")]
              ),
              _vm._v("函数就定义在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("options.js")]
              ),
              _vm._v("文件内，源码如下"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [
                      _vm._v("/**"),
                      _c("br"),
                      _vm._v(" * Default strategy."),
                      _c("br"),
                      _vm._v(" */"),
                    ]
                  ),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" defaultStrat = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" ("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("parentVal: any, childVal: any")]
                      ),
                      _vm._v("): "),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-title",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("any")]
                      ),
                      _vm._v(" "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" childVal === "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("undefined")]
                  ),
                  _c("br"),
                  _vm._v("    ? parentVal"),
                  _c("br"),
                  _vm._v("    : childVal"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("defaultStart")]
              ),
              _vm._v("作用如其名，它是一个默认的合并策略：只要子选项不是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("undefined")]
              ),
              _vm._v(
                "则使用子选项，否则使用父选项。最终的效果就是你初始化了什么，得到的就是什么。"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("而且"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v("也提供了一个全局配置叫"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue.config.optionMergeStrategies")]
              ),
              _vm._v(
                "，这个对象就是选项合并中的策略对象，所以可以通过它指定某一个选项的合并策略，常用于指定自定义选项的合并策略，比如可以给"
              ),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("customOption")]
              ),
              _vm._v("选项指定一个合并策略，只需要在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("config.optionMergeStrategies")]
              ),
              _vm._v("上添加与选项同名的策略函数即可："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("Vue.config.optionMergeStrategies.customOption = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" ("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("parentVal, childVal")]
                      ),
                      _vm._v(") "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" parentVal ? (parentVal + childVal) : childVal"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("自定义"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("customOption")]
              ),
              _vm._v("的合并策略是：如果没有"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("parentVal")]
              ),
              _vm._v("则直接返回"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("childVal")]
              ),
              _vm._v("，否则返回两者的和。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [_vm._v("比如下面例子：")]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 创建子类")]
                  ),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" Sub = Vue.extend({"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("customOption")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-number",
                      staticStyle: { color: "#B8D7A3", "line-height": "26px" },
                    },
                    [_vm._v("1")]
                  ),
                  _c("br"),
                  _vm._v("})"),
                  _c("br"),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 以子类创建实例")]
                  ),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" vm = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("new")]
                  ),
                  _vm._v(" Sub({"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("customOption")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-number",
                      staticStyle: { color: "#B8D7A3", "line-height": "26px" },
                    },
                    [_vm._v("2")]
                  ),
                  _vm._v(","),
                  _c("br"),
                  _vm._v("    created () {"),
                  _c("br"),
                  _vm._v("     "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("console")]
                  ),
                  _vm._v(".log("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("this")]
                  ),
                  _vm._v(".$options.customOption) "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 3")]
                  ),
                  _c("br"),
                  _vm._v("    }"),
                  _c("br"),
                  _vm._v("})"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("结果是在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("created")]
              ),
              _vm._v("方法中打印数字3。自定义合并选项的策略函数，这非常实用。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "h3",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                color: "black",
                "font-size": "16px",
                "font-weight": "bold",
                "text-align": "center",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "border-bottom": "2px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("vm.$createElement")]
              ),
              _c("span", {
                staticClass: "suffix",
                staticStyle: { display: "none" },
              }),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initRender")]
              ),
              _vm._v("中，定义了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm.$createElement()")]
              ),
              _vm._v("方法，"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initRender")]
              ),
              _vm._v("在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("core/instance/render.js")]
              ),
              _vm._v("文件。在该函数中有以下一段代码："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// bind the createElement fn to this instance")]
                  ),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [
                      _vm._v(
                        "// so that we get proper render context inside it."
                      ),
                    ]
                  ),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [
                      _vm._v(
                        "// args order: tag, data, children, normalizationType, alwaysNormalize"
                      ),
                    ]
                  ),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [
                      _vm._v(
                        "// internal version is used by render functions compiled from templates"
                      ),
                    ]
                  ),
                  _c("br"),
                  _vm._v("  vm._c = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _vm._v("("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("a, b, c, d")]
                      ),
                      _vm._v(") =>"),
                    ]
                  ),
                  _vm._v(" createElement(vm, a, b, c, d, "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("false")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [
                      _vm._v(
                        "// normalization is always applied for the public version, used in"
                      ),
                    ]
                  ),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// user-written render functions.")]
                  ),
                  _c("br"),
                  _vm._v("  vm.$createElement = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _vm._v("("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("a, b, c, d")]
                      ),
                      _vm._v(") =>"),
                    ]
                  ),
                  _vm._v(" createElement(vm, a, b, c, d, "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("true")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("这段代码在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue")]
              ),
              _vm._v("实例对象上添加了两个方法："),
            ]
          ),
          _vm._v(" "),
          _c(
            "ul",
            {
              staticStyle: {
                "margin-top": "8px",
                "margin-bottom": "8px",
                "padding-left": "25px",
                "font-size": "15px",
                color: "#595959",
                "list-style-type": "circle",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("li", [
                _c(
                  "section",
                  {
                    staticStyle: {
                      "margin-top": "5px",
                      "margin-bottom": "5px",
                      "line-height": "26px",
                      "text-align": "left",
                      "font-size": "14px",
                      "font-weight": "normal",
                      color: "#595959",
                    },
                  },
                  [
                    _c(
                      "code",
                      {
                        staticStyle: {
                          "font-size": "14px",
                          "word-wrap": "break-word",
                          padding: "2px 4px",
                          "border-radius": "4px",
                          margin: "0 2px",
                          "background-color": "rgba(27,31,35,.05)",
                          "font-family":
                            "Operator Mono, Consolas, Monaco, Menlo, monospace",
                          "word-break": "break-all",
                          color: "#595959",
                        },
                      },
                      [_vm._v("vm._c")]
                    ),
                  ]
                ),
              ]),
              _c("li", [
                _c(
                  "section",
                  {
                    staticStyle: {
                      "margin-top": "5px",
                      "margin-bottom": "5px",
                      "line-height": "26px",
                      "text-align": "left",
                      "font-size": "14px",
                      "font-weight": "normal",
                      color: "#595959",
                    },
                  },
                  [
                    _c(
                      "code",
                      {
                        staticStyle: {
                          "font-size": "14px",
                          "word-wrap": "break-word",
                          padding: "2px 4px",
                          "border-radius": "4px",
                          margin: "0 2px",
                          "background-color": "rgba(27,31,35,.05)",
                          "font-family":
                            "Operator Mono, Consolas, Monaco, Menlo, monospace",
                          "word-break": "break-all",
                          color: "#595959",
                        },
                      },
                      [_vm._v("vm.$createElement")]
                    ),
                  ]
                ),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("这两个方法实际上是对内函数"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("createElement")]
              ),
              _vm._v("的包装。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("render: "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("function")]
                  ),
                  _vm._v(" (createElement) {"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" createElement("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'h2'")]
                  ),
                  _vm._v(", "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'title'")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("总所周知，渲染函数的第一个参数就是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("createElement")]
              ),
              _vm._v(
                "函数，该函数用来创建虚拟节点，通过上面的了解，你也可以这样写"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("render: "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" ("),
                      _c("span", {
                        staticClass: "hljs-params",
                        staticStyle: {
                          color: "#DCDCDC",
                          "line-height": "26px",
                        },
                      }),
                      _vm._v(") "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("this")]
                  ),
                  _vm._v(".$createElement("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'h2'")]
                  ),
                  _vm._v(", "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'title'")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [_vm._v("上面这两段代码是完全等价的。")]
          ),
          _vm._v(" "),
          _c(
            "h3",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                color: "black",
                "font-size": "16px",
                "font-weight": "bold",
                "text-align": "center",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "border-bottom": "2px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("provide & inject")]
              ),
              _c("span", {
                staticClass: "suffix",
                staticStyle: { display: "none" },
              }),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [_vm._v("最后来瞧瞧provide和inject的原理。")]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("如果一个组件使用了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v(
                "选项，那么该选项指定的数据将会被注入到该组件的所有子组件中，在子组件中可以使用"
              ),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项选择性注入，这样子组件就拿到了父组件提供的数据。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("和"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("都是在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Vue.prototype._init")]
              ),
              _vm._v("方法中完成初始化工作的："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("initLifecycle(vm)"),
                  _c("br"),
                  _vm._v("initEvents(vm)"),
                  _c("br"),
                  _vm._v("initRender(vm)"),
                  _c("br"),
                  _vm._v("callHook(vm, "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'beforeCreate'")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _vm._v("initInjections(vm)"),
                  _c("br"),
                  _vm._v("initState(vm)"),
                  _c("br"),
                  _vm._v("initProvide(vm)"),
                  _c("br"),
                  _vm._v("callHook(vm, "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'created'")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("可以发现"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initInjections")]
              ),
              _vm._v("函数在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initProvide")]
              ),
              _vm._v(
                "函数之前被调用，这说明对于任何一个组件来说，总是要优先初始化"
              ),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项，再初始化"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("选项的。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("先来看看"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initInjections")]
              ),
              _vm._v("函数，它定义在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("src/core/instance/inject.js")]
              ),
              _vm._v("文件中"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("export")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-title",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("initInjections")]
                      ),
                      _vm._v(" ("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("vm: Component")]
                      ),
                      _vm._v(") "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" result = resolveInject(vm.$options.inject, vm)"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (result) {"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 省略...")]
                  ),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("该函数接收组件实例对象作为参数，在函数内部首先定义了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("常量，接下来要判断"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("为真才执行"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("语句内的代码。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("常量的值是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("resolveInject")]
              ),
              _vm._v("函数的返回值。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("export")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-title",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("resolveInject")]
                      ),
                      _vm._v(" ("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("inject: any, vm: Component")]
                      ),
                      _vm._v("): ?"),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-title",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("Object")]
                      ),
                      _vm._v(" "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (inject) {"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("// 省略...")]
                  ),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" result"),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("可以看到，"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("resolveInject")]
              ),
              _vm._v("函数接收两个参数，分别是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项以及组件实例对象。如果"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("为真，那么将执行"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("语句块内的代码，最后返回"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("，否则返回"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("undefined")]
              ),
              _vm._v("。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("语句块内的代码："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" result = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("Object")]
                  ),
                  _vm._v(".create("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("null")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" keys = hasSymbol"),
                  _c("br"),
                  _vm._v("  ? "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("Reflect")]
                  ),
                  _vm._v(".ownKeys(inject).filter("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("key")]
                      ),
                      _vm._v(" =>"),
                    ]
                  ),
                  _vm._v(" {"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("/* istanbul ignore next */")]
                  ),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("return")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("Object")]
                  ),
                  _vm._v(".getOwnPropertyDescriptor(inject, key).enumerable"),
                  _c("br"),
                  _vm._v("  })"),
                  _c("br"),
                  _vm._v("  : "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("Object")]
                  ),
                  _vm._v(".keys(inject)"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("首先通过"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Object.create(null)")]
              ),
              _vm._v("创建一个空对象并赋值给"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("。接着定义"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("keys")]
              ),
              _vm._v("常量，保存"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项对象的每一个键名。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("首先对"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("hasSymbol")]
              ),
              _vm._v("进行判断，如果为真，则使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Reflect.ownKeys")]
              ),
              _vm._v("获取"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("对象中所有可枚举的键名，否则使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Object.keys")]
              ),
              _vm._v("。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Reflect.ownKeys")]
              ),
              _vm._v("的好处是可以支持"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("Symbol")]
              ),
              _vm._v("类型作为键名。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("接下来使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("for")]
              ),
              _vm._v("循环遍历刚刚获取的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("keys")]
              ),
              _vm._v("数组"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("for")]
                  ),
                  _vm._v(" ("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("let")]
                  ),
                  _vm._v(" i = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-number",
                      staticStyle: { color: "#B8D7A3", "line-height": "26px" },
                    },
                    [_vm._v("0")]
                  ),
                  _vm._v("; i < keys.length; i++) {"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" key = keys[i];"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" provideKey = inject[key].from"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("let")]
                  ),
                  _vm._v(" source = vm"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("while")]
                  ),
                  _vm._v(" (source) {"),
                  _c("br"),
                  _vm._v("      "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(
                    " (source._provided && hasOwn(source._provided, provideKey)) {"
                  ),
                  _c("br"),
                  _vm._v(
                    "          result[key] = source._provided[provideKey]"
                  ),
                  _c("br"),
                  _vm._v("          "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("break")]
                  ),
                  _c("br"),
                  _vm._v("      }"),
                  _c("br"),
                  _vm._v("      source = source.$parent"),
                  _c("br"),
                  _vm._v("    }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provideKey")]
              ),
              _vm._v("常量保存的是每一个"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项所定义的注入对象的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("from")]
              ),
              _vm._v("属性的值。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "strong",
                { staticStyle: { color: "#595959", "font-weight": "bold" } },
                [
                  _c("span", [_vm._v("「")]),
                  _vm._v("题外话："),
                  _c("span", [_vm._v("」")]),
                ]
              ),
              _c("br"),
              _vm._v("\n在规范化阶段中，"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("选项会被规范为一个对象，并且对象必然含有"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("from")]
              ),
              _vm._v("属性。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("inject: ["),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data1'")]
                  ),
                  _vm._v(", "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data2'")]
                  ),
                  _vm._v("]"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("那么被规范化后"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm.$options.inject")]
              ),
              _vm._v("选项将变为："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data1'")]
                  ),
                  _vm._v(": { "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("from")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data1'")]
                  ),
                  _vm._v(" },"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data2'")]
                  ),
                  _vm._v(": { "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-attr",
                      staticStyle: { color: "#9CDCFE", "line-height": "26px" },
                    },
                    [_vm._v("from")]
                  ),
                  _vm._v(": "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'data2'")]
                  ),
                  _vm._v(" }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("接着"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("while")]
              ),
              _vm._v("循环，内部有一个"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("条件判断，检测"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("source._provided")]
              ),
              _vm._v("属性是否存在，并且"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("source._provided")]
              ),
              _vm._v("对象自身是否拥有"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provideKey")]
              ),
              _vm._v("键，如果有，则说明找到了注入的数据："),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("source._provided[provideKey]")]
              ),
              _vm._v("，并将其赋值给"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("对象的同名属性。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("如果"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("为假，则执行"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("source = source.$parent")]
              ),
              _vm._v("；\n重新赋值"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("source")]
              ),
              _vm._v(
                "变量，使其引用父组件，以及类推就完成了向父代组件查找数据的需求，直到找到数据为止。"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [_vm._v("如果找不到数据：")]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (!source) {"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" ("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'default'")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("in")]
                  ),
                  _vm._v(" inject[key]) {"),
                  _c("br"),
                  _vm._v("    "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" provideDefault = inject[key].default"),
                  _c("br"),
                  _vm._v("    result[key] = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("typeof")]
                  ),
                  _vm._v(" provideDefault === "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'function'")]
                  ),
                  _c("br"),
                  _vm._v("      ? provideDefault.call(vm)"),
                  _c("br"),
                  _vm._v("      : provideDefault"),
                  _c("br"),
                  _vm._v("  } "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("else")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (process.env.NODE_ENV !== "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'production'")]
                  ),
                  _vm._v(") {"),
                  _c("br"),
                  _vm._v("    warn("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [
                      _vm._v('`Injection "'),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-subst",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("${key}")]
                      ),
                      _vm._v('" not found`'),
                    ]
                  ),
                  _vm._v(", vm)"),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("查看"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject[key]")]
              ),
              _vm._v("对象中是否定义了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("default")]
              ),
              _vm._v("选项，如果定义了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("default")]
              ),
              _vm._v("选项则使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("default")]
              ),
              _vm._v(
                "选项提供的数据作为注入数据，否则在非生产环境下会提示开发者。"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("最后如果查找到数据，则将"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("返回。但是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("常量的值可能是不存在的，所以需要进行一个"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("的判断。为真时，说明成功取得注入的数据，此时执行"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("语句块的内容。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _vm._v("toggleObserving("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("false")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-built_in",
                      staticStyle: { color: "#4EC9B0", "line-height": "26px" },
                    },
                    [_vm._v("Object")]
                  ),
                  _vm._v(".keys(result).forEach("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("key")]
                      ),
                      _vm._v(" =>"),
                    ]
                  ),
                  _vm._v(" {"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-comment",
                      staticStyle: {
                        color: "#57A64A",
                        "font-style": "italic",
                        "line-height": "26px",
                      },
                    },
                    [_vm._v("/* istanbul ignore else */")]
                  ),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (process.env.NODE_ENV !== "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'production'")]
                  ),
                  _vm._v(") {"),
                  _c("br"),
                  _vm._v("    defineReactive(vm, key, result[key], () => {"),
                  _c("br"),
                  _vm._v("      warn("),
                  _c("br"),
                  _vm._v("        "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [
                      _vm._v(
                        "`Avoid mutating an injected value directly since the changes will be `"
                      ),
                    ]
                  ),
                  _vm._v(" +"),
                  _c("br"),
                  _vm._v("        "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [
                      _vm._v(
                        "`overwritten whenever the provided component re-renders. `"
                      ),
                    ]
                  ),
                  _vm._v(" +"),
                  _c("br"),
                  _vm._v("        "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [
                      _vm._v('`injection being mutated: "'),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-subst",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("${key}")]
                      ),
                      _vm._v('"`'),
                    ]
                  ),
                  _vm._v(","),
                  _c("br"),
                  _vm._v("        vm"),
                  _c("br"),
                  _vm._v("      )"),
                  _c("br"),
                  _vm._v("    })"),
                  _c("br"),
                  _vm._v("  } "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("else")]
                  ),
                  _vm._v(" {"),
                  _c("br"),
                  _vm._v("    defineReactive(vm, key, result[key])"),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("})"),
                  _c("br"),
                  _vm._v("toggleObserving("),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-literal",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("true")]
                  ),
                  _vm._v(")"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("通过遍历"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("result")]
              ),
              _vm._v("常量并调用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("defineReactive")]
              ),
              _vm._v("函数在当前组件实例对象"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm")]
              ),
              _vm._v("上定义与注入名称相同的变量，并赋予取得的值。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("在使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("defineReactive")]
              ),
              _vm._v("之前，调用了"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("toggleObsesrving(false)")]
              ),
              _vm._v(
                "函数关闭响应式定义的开关，之后又将开关开启，这会导致使用"
              ),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("defineReactive")]
              ),
              _vm._v("定义属性时不会将该属性的值转换为响应式。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("做的事很简单，先看看"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("initProvide")]
              ),
              _vm._v("的内容："),
            ]
          ),
          _vm._v(" "),
          _c(
            "pre",
            {
              staticClass: "custom",
              staticStyle: {
                "margin-top": "10px",
                "margin-bottom": "10px",
                "border-radius": "5px",
                "box-shadow": "rgba(0, 0, 0, 0.55) 0px 2px 10px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticStyle: {
                  display: "block",
                  background: "url(https://files.mdnice.com/point.png)",
                  height: "30px",
                  width: "100%",
                  "background-size": "40px",
                  "background-repeat": "no-repeat",
                  "background-color": "#1E1E1E",
                  "margin-bottom": "-7px",
                  "border-radius": "5px",
                  "background-position": "10px 10px",
                },
              }),
              _c(
                "code",
                {
                  staticClass: "hljs",
                  staticStyle: {
                    "overflow-x": "auto",
                    padding: "16px",
                    color: "#DCDCDC",
                    display: "-webkit-box",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "font-size": "12px",
                    "-webkit-overflow-scrolling": "touch",
                    "padding-top": "15px",
                    background: "#1E1E1E",
                    "border-radius": "5px",
                  },
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("export")]
                  ),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-function",
                      staticStyle: { color: "#DCDCDC", "line-height": "26px" },
                    },
                    [
                      _c(
                        "span",
                        {
                          staticClass: "hljs-keyword",
                          staticStyle: {
                            color: "#569CD6",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("function")]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-title",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("initProvide")]
                      ),
                      _vm._v(" ("),
                      _c(
                        "span",
                        {
                          staticClass: "hljs-params",
                          staticStyle: {
                            color: "#DCDCDC",
                            "line-height": "26px",
                          },
                        },
                        [_vm._v("vm: Component")]
                      ),
                      _vm._v(") "),
                    ]
                  ),
                  _vm._v("{"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("const")]
                  ),
                  _vm._v(" provide = vm.$options.provide"),
                  _c("br"),
                  _vm._v("  "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("if")]
                  ),
                  _vm._v(" (provide) {"),
                  _c("br"),
                  _vm._v("    vm._provided = "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-keyword",
                      staticStyle: { color: "#569CD6", "line-height": "26px" },
                    },
                    [_vm._v("typeof")]
                  ),
                  _vm._v(" provide === "),
                  _c(
                    "span",
                    {
                      staticClass: "hljs-string",
                      staticStyle: { color: "#D69D85", "line-height": "26px" },
                    },
                    [_vm._v("'function'")]
                  ),
                  _c("br"),
                  _vm._v("      ? provide.call(vm)"),
                  _c("br"),
                  _vm._v("      : provide"),
                  _c("br"),
                  _vm._v("  }"),
                  _c("br"),
                  _vm._v("}"),
                  _c("br"),
                ]
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _vm._v("同样是接收组件实例对象作为参数。定义"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("，是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm.$options.provide")]
              ),
              _vm._v("选项的引用，接着是"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("if")]
              ),
              _vm._v("判断语句，只有在"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("选项存在时才执行。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("procide")]
              ),
              _vm._v("可以是对象，也可以是函数，所以使用"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("typeof")]
              ),
              _vm._v("检测类型，如果是函数则执行该函数获取数据，否则直接将"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("本身作为数据。最后将数据赋值给组件实例对象的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm._provided")]
              ),
              _vm._v("属性。也就是前面说的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v("内，注入的数据就是从父组件实例的"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("vm._provided")]
              ),
              _vm._v("属性中获取的。"),
            ]
          ),
          _vm._v(" "),
          _c(
            "p",
            {
              staticStyle: {
                "padding-top": "8px",
                "padding-bottom": "8px",
                "line-height": "26px",
                color: "#595959",
                margin: "10px 0px",
                "letter-spacing": "2px",
                "font-size": "14px",
                "word-spacing": "2px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c(
                "strong",
                { staticStyle: { color: "#595959", "font-weight": "bold" } },
                [
                  _c("span", [_vm._v("「")]),
                  _vm._v("最后提示："),
                  _c("span", [_vm._v("」")]),
                ]
              ),
              _c("br"),
              _vm._v(" "),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("provide")]
              ),
              _vm._v("和"),
              _c(
                "code",
                {
                  staticStyle: {
                    "font-size": "14px",
                    "word-wrap": "break-word",
                    padding: "2px 4px",
                    "border-radius": "4px",
                    margin: "0 2px",
                    "background-color": "rgba(27,31,35,.05)",
                    "font-family":
                      "Operator Mono, Consolas, Monaco, Menlo, monospace",
                    "word-break": "break-all",
                    color: "#595959",
                  },
                },
                [_vm._v("inject")]
              ),
              _vm._v(
                "主要在开发高阶插件/组件库时使用。并不推荐用于普通应用程序代码中。"
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "h2",
            {
              staticStyle: {
                "margin-top": "30px",
                "margin-bottom": "15px",
                padding: "0px",
                "font-weight": "bold",
                color: "black",
                "font-size": "22px",
                "text-align": "left",
                margin: "20px 10px 0px 0px",
              },
              attrs: { "data-tool": "mdnice编辑器" },
            },
            [
              _c("span", {
                staticClass: "prefix",
                staticStyle: { display: "none" },
              }),
              _c(
                "span",
                {
                  staticClass: "content",
                  staticStyle: {
                    "font-size": "18px",
                    "font-weight": "bold",
                    display: "inline-block",
                    "padding-left": "10px",
                    "border-left": "5px solid #DEC6FB",
                    color: "#595959",
                  },
                },
                [_vm._v("结尾")]
              ),
              _c("span", { staticClass: "suffix" }),
            ]
          ),
        ]
      ),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}