(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{436:function(e,s,a){"use strict";a.r(s);var n=a(57),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[e._v("前言")]),e._v(" "),a("p",[e._v("全方位的介绍如何使用"),a("code",[e._v("JEST")]),e._v("测试一个VUE组件。"),a("br"),e._v("\n（如果不知道怎么开始"),a("code",[e._v("VUE")]),e._v("单元测试的同学们，请查看之前的文章"),a("a",{attrs:{href:"https://juejin.cn/post/6906295144505409549",target:"_blank",rel:"noopener noreferrer"}},[e._v("VUE单元测试--开启测试之旅"),a("OutboundLink")],1),e._v("）")]),e._v(" "),a("p",[e._v("着重介绍在使用"),a("code",[e._v("Vue.extend")]),e._v("创建构造函数的形式注册的组件，包括：")]),e._v(" "),a("ul",[a("li",[e._v("测试定时器函数")]),e._v(" "),a("li",[e._v("测试"),a("code",[e._v("HTTP")]),e._v("请求")]),e._v(" "),a("li",[e._v("测试事件\n等这几个部分的介绍")])]),e._v(" "),a("p",[e._v("代码在"),a("a",{attrs:{href:"https://github.com/zhangwinwin/FEBlog/tree/master/unitest",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),a("OutboundLink")],1),e._v("欢迎点赞👍")]),e._v(" "),a("h2",{attrs:{id:"测试组件"}},[e._v("测试组件")]),e._v(" "),a("p",[e._v("测试组件，其实就是测试组件的方法以及方法所依赖的模块。"),a("br"),e._v("\n测试组件方法很简单：调用组件方法并断言方法能用正确地影响了组件的输出即可。")]),e._v(" "),a("p",[e._v("从一个例子出发，测试一个进度条组件")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template>\n  <div class="Progress-Bar" :class="{hidden: hidden}">\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'ProgressBar\',\n  data () {\n    return {\n      hidden: true\n    }\n  },\n  methods: {\n    start () {\n      this.hidden = false;\n    },\n    finally () {\n      this.hidden = true;\n    }\n  },\n}\n<\/script>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br")])]),a("p",[e._v("代码一目了然，当调用"),a("code",[e._v("start")]),e._v("方法时，应该展示进度条；当调用"),a("code",[e._v("finally")]),e._v("方法时，应该屏蔽进度条。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import { shallowMount } from '@vue/test-utils';\nimport ProgressBar from '@/views/ProgressBar.vue';\n\ndescribe('test progress', () => {\n  it('when start is clicked, show the progressBar', () => {\n    const wrapper = shallowMount(ProgressBar);\n    expect(wrapper.classes()).toContain('hidden');\n    wrapper.vm.start();\n    wrapper.vm.finally();\n    expect(wrapper.classes()).toContain('hidden');\n  })\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("运行"),a("code",[e._v("yarn test:unit")]),e._v("时，测试通过。")]),e._v(" "),a("p",[e._v("这是简单的组件测试。")]),e._v(" "),a("h3",{attrs:{id:"vue实例添加属性"}},[e._v("Vue实例添加属性")]),e._v(" "),a("p",[e._v("事实上还有一种非常常见的组件模式，就是往"),a("code",[e._v("Vue")]),e._v("实例添加属性。在之前的文章中也介绍过，用这"),a("a",{attrs:{href:"https://juejin.cn/post/6893303835251441677",target:"_blank",rel:"noopener noreferrer"}},[e._v("VUE的“动态”案例"),a("OutboundLink")],1),e._v("介绍的组件来做例子，组件的具体开发就不多作介绍了，代码在代码在"),a("a",{attrs:{href:"https://github.com/zhangwinwin/FEBlog/tree/master/unitest",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),a("OutboundLink")],1),e._v("中。"),a("br"),e._v("\n（进入到"),a("code",[e._v("unitest")]),e._v("文件夹中，运行"),a("code",[e._v("yarn serve")]),e._v("。）")]),e._v(" "),a("p",[e._v("功能：点击按钮触发"),a("code",[e._v("handleCheck")]),e._v("事件，弹出"),a("code",[e._v("alarm")]),e._v("弹窗，弹窗"),a("code",[e._v("id")]),e._v("就是在"),a("code",[e._v("primaryId")]),e._v("基础上增加1。"),a("br"),e._v("\n测试用例如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("describe('test alarm', () => {\n  it('when handleCheck is clicked, show the alarm', () => {\n    const wrapper = shallowMount(Home);\n    const count = wrapper.vm.primaryId;\n    wrapper.vm.handleCheck();\n    const newCount = wrapper.vm.primaryId;\n    expect(newCount).toBe(count + 1)\n  })\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("运行"),a("code",[e._v("yarn test:uni")]),e._v("时会发生错误\n"),a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/512eb096fd1844b49c8900c436e0f67e~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),e._v(" "),a("p",[e._v("这是因为在测试中直接挂载了组件，而这个组件实例是使用"),a("code",[e._v("Vue.extend")]),e._v("函数创建的，并在"),a("code",[e._v("main.js")]),e._v("引入和添加到"),a("code",[e._v("Vue")]),e._v("的原型中的。换而言之，"),a("code",[e._v("main.js")]),e._v("并没有被执行，这个组件就没有被创建，"),a("code",[e._v("$alarm")]),e._v("属性就永远不会被添加。\n"),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/696f8ef28fe34eeb940d479d2a28e1a1~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),e._v(" "),a("p",[e._v("这时需要在加载组件到测试之前先为"),a("code",[e._v("Vue")]),e._v("实例添加属性。可以使用"),a("code",[e._v("mocks")]),e._v("来实现。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("shallowMount(Home, {\n  mocks: {\n    $alarm: () => {}\n  }\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("再次运行"),a("code",[e._v("yarn test:uni")]),e._v("时就完美的通过了。")]),e._v(" "),a("h3",{attrs:{id:"测试定时器函数"}},[e._v("测试定时器函数")]),e._v(" "),a("p",[e._v("定时器函数包括"),a("code",[e._v("JavaScript")]),e._v("异步函数都是前端中常见的功能，所以都需要测试对应的代码。但肯定不是等待定时器函数走完，需要使用"),a("code",[e._v("Jest.useFakeTimers")]),e._v("替换全局定时器函数，替换后可以使用"),a("code",[e._v("runTimersToTime")]),e._v("推进时间。")]),e._v(" "),a("h4",{attrs:{id:"测试settimeout"}},[e._v("测试setTimeout")]),e._v(" "),a("p",[e._v("功能："),a("code",[e._v("handleCheck")]),e._v("事件触发后，会将"),a("code",[e._v("alarm")]),e._v("组件"),a("code",[e._v("id unshift")]),e._v("到"),a("code",[e._v("idList")]),e._v("数组中，弹出3秒后组件就会被销毁，"),a("code",[e._v("idList")]),e._v("也会将其"),a("code",[e._v("id")]),e._v("给删除掉。"),a("br"),e._v("\n测试用例如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("it('when handleCheck is clicked, 3second later alarm would be disappeared', () => {\n  // 测试之前，替换全局定时函数\n  jest.useFakeTimers();\n  const wrapper = shallowMount(Home, {\n    mocks: {\n      $alarm: () => {}\n    }\n  });\n  wrapper.vm.handleCheck();\n  expect(wrapper.vm.idList.length).toBe(1);\n  // 将时间推进3000毫秒\n  jest.runTimersToTime(3000);\n  expect(wrapper.vm.idList.length).toBe(0);\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h4",{attrs:{id:"测试cleartimeout"}},[e._v("测试clearTimeout")]),e._v(" "),a("p",[e._v("功能：当"),a("code",[e._v("alarm")]),e._v("弹窗超过一个的时候，就会调用"),a("code",[e._v("clearTimeout")]),e._v("销毁前一个的"),a("code",[e._v("timer")]),e._v("。这时就要监听"),a("code",[e._v("clearTimeout")]),e._v("是否被调用。")]),e._v(" "),a("p",[e._v("使用"),a("code",[e._v("Jest.spyOn")]),e._v("函数创建一个"),a("code",[e._v("spy")]),e._v("，可以使用"),a("code",[e._v("toHaveBeenCalled")]),e._v("匹配器来检测"),a("code",[e._v("spy")]),e._v("是否被调用，更进一步地可以使用"),a("code",[e._v("toHaveBeenCalledWith")]),e._v("匹配器测试"),a("code",[e._v("spy")]),e._v("是否带有指定参数被调用。")]),e._v(" "),a("p",[e._v("所以在测试中，需要得到"),a("code",[e._v("setTimeout")]),e._v("的返回值，"),a("code",[e._v("Jest.mockReturnValue")]),e._v("可以实现这个需求。"),a("code",[e._v("mockReturnValue")]),e._v("可以将"),a("code",[e._v("setTimeout")]),e._v("的返回值设置为任何值，比如将返回值设置为123："),a("code",[e._v("setTimeOut.mockReturnValue(123)")]),a("br"),e._v("\n测试用例如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("it('when handleCheck is clicked and the number of alarm exceeds 1 , The previous alarm disappears immediately', () => {\n    // 监听clearTimeout\n    jest.spyOn(window, 'clearTimeout')\n    const wrapper = shallowMount(Home, {\n      mocks: {\n        $alarm: () => {}\n      }\n    });\n    // 设置setTimeout返回值为123\n    setTimeout.mockReturnValue(123)\n    wrapper.vm.handleCheck();\n    // 设置setTimeout返回值为456\n    setTimeout.mockReturnValue(456)\n    wrapper.vm.handleCheck();\n    expect(window.clearTimeout).toHaveBeenCalledWith(123)\n  })\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("h3",{attrs:{id:"测试模拟http请求"}},[e._v("测试模拟HTTP请求")]),e._v(" "),a("p",[a("code",[e._v("HTTP")]),e._v("请求不在单元测试范围，因为它会降低单元测试的速度；降低单元测试的可靠性，因为"),a("code",[e._v("HTTP")]),e._v("请求不会100%请求成功。所以需要在单元测试中模拟"),a("code",[e._v("api")]),e._v("文件，从而使得"),a("code",[e._v("fetchAlarmDetail")]),e._v("永远不会发送一个"),a("code",[e._v("HTTP")]),e._v("请求。")]),e._v(" "),a("p",[a("code",[e._v("Jest")]),e._v("提供了一个"),a("code",[e._v("API")]),e._v("，用于选择当一个模块导入另一个模块时返回哪些文件或函数。首先的创建一个"),a("code",[e._v("mock")]),e._v("文件，而不是直接在测试中引入真正的文件。")]),e._v(" "),a("p",[e._v("在"),a("code",[e._v("api")]),e._v("目录中创建一个"),a("code",[e._v("__mocks__")]),e._v("目录，里面创建一个模拟的需要测试的"),a("code",[e._v("alarmApi")]),e._v("文件")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// src/api/__mocks__/alarmApi.js\nexport const fetchAlarmDetail = jest.fn(() => Promise.resolve('人机'));\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("然后在测试文件中加入")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// alarm.spec.js\njest.mock('../../src/api/alarmApi.js');\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("调用"),a("code",[e._v("jest.mock('../../src/api/alarmApi.js')")]),e._v("后，当模块导入了"),a("code",[e._v("src/api/alarmApi.js")]),e._v("后，"),a("code",[e._v("Jest")]),e._v("将使用创建的"),a("code",[e._v("mock")]),e._v("文件而不是原文件。")]),e._v(" "),a("p",[e._v("测试用例如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("it('fetch the alarm detail by http', async () => {\n  // 设置断言数量，如果一个promise被拒绝，测试会失败\n  expect.assertions(1);\n  const name = await alarmApi.fetchAlarmDetail();\n  expect(name).toBe('人机')\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("设置断言数量是在异步测试中非常常用的方法，因为这可以确保在测试结束前执行完所有断言。")]),e._v(" "),a("h4",{attrs:{id:"在组件中调用http请求函数"}},[e._v("在组件中调用HTTP请求函数")]),e._v(" "),a("p",[e._v("一般来说，"),a("code",[e._v("HTTP")]),e._v("请求是在组件中使用的，单独测试作用并不大。那么在组件中载入其他异步依赖，应该怎么去测试呢？")]),e._v(" "),a("p",[e._v("首先在"),a("code",[e._v("home.vue")]),e._v("中导入请求文件")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import * as alarmApi from '@/api/alarmApi.js';\n\n// 在handleCheck中使用\nasync handleCheck () {\n    // ...\n    const name = await alarmApi.fetchAlarmDetail();\n    // ...\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("当测试调用异步代码的时候，并不总是可以访问需要等待的异步函数。这意味着不能在测试中使用"),a("code",[e._v("await")]),e._v("来等待异步函数结束。")]),e._v(" "),a("p",[e._v("这时可以使用"),a("code",[e._v("flush-promises")]),e._v("库来帮忙，它能等待异步函数结束。例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let loading = true;\nPromise.resolve().then(() => {\n    loading = false;\n}\nawait flushPromise();\nexpect(loading).toBe(false)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("基于此，将之前的测试用例修改为：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 2.1\n  it('when handleCheck is clicked, show the alarm', async () => {\n    expect.assertions(1);\n    const wrapper = shallowMount(Home, {\n      mocks\n    });\n    const count = wrapper.vm.primaryId;\n    alarmApi.fetchAlarmDetail.mockImplementationOnce(() => Promise.resolve('人机'));\n    wrapper.vm.handleCheck();\n    await flushPromises();\n    const newCount = wrapper.vm.primaryId;\n    expect(newCount).toBe(count + 1)\n  })\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[e._v("加入一个"),a("code",[e._v("expect.assertions(1)")]),e._v("设置断言数量，设置"),a("code",[e._v("fetchAlarmDetail")]),e._v("函数的返回结果，最后调用"),a("code",[e._v("await flushPromises();")]),e._v("等待所有异步函数结束。（之后的测试用例修改，不再展开讨论，详情请看代码。）")]),e._v(" "),a("p",[e._v("在命令行中输入"),a("code",[e._v("yarn test:uni")]),e._v(" "),a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cff34a12d99e428c9bb1d62160e7ea63~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"测试事件"}},[e._v("测试事件")]),e._v(" "),a("h4",{attrs:{id:"测试dom事件"}},[e._v("测试DOM事件")]),e._v(" "),a("p",[e._v("功能：点击一个按钮，触发一个"),a("code",[e._v("click")]),e._v("事件\n测试用例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("it('click the button then the $alarm will be called', () => {\n  const wrapper = shallowMount(Home, {\n    mocks\n  });\n  wrapper.find('button.check').trigger('click');\n  expect($alarm).toHaveBeenCalled();\n})\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("每个包装器都有一个"),a("code",[e._v("trigger")]),e._v("方法，用于在包装器上分发一个事件。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 键盘事件\nwrapper.trigger('keydown.up')；\nwrapper.trigger('keydown', {\n  key: 'a'\n})\n// 鼠标事件\nwrapper.trigger('mouseenter')；\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h4",{attrs:{id:"测试自定义事件"}},[e._v("测试自定义事件")]),e._v(" "),a("p",[a("code",[e._v("VUE")]),e._v("自定义事件是由带有"),a("code",[e._v("VUE")]),e._v("实例"),a("code",[e._v("$emit")]),e._v("方法的组件事件发射出去的。在子组件中发射一个事件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// son.vue\nthis.$emit('eventName', payload);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在父组件中接收一个事件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// father\n<son @eventName='handleEvent'></son>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("功能： 点击位于"),a("code",[e._v("HelloWorld")]),e._v("组件的"),a("code",[e._v("class")]),e._v("为"),a("code",[e._v("hello")]),e._v("的"),a("code",[e._v("button")]),e._v("元素，触发"),a("code",[e._v("sayHello")]),e._v("事件并携带"),a("code",[e._v("hello")]),e._v("。位于"),a("code",[e._v("Home")]),e._v("组件的"),a("code",[e._v("handleSayHello")]),e._v("触发，将"),a("code",[e._v("greeting")]),e._v("从"),a("code",[e._v("hi")]),e._v("变成"),a("code",[e._v("hello")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("it('click the check button, home.greeting will change to hello', () => {\n    const wrapper = shallowMount(Home);\n    wrapper.findComponent(Hello).vm.$emit('sayHello', 'hello');\n    expect(wrapper.vm.greeting).toBe('hello')\n  })\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);