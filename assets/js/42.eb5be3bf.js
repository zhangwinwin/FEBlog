(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{441:function(s,n,e){"use strict";e.r(n);var a=e(57),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[s._v("前言")]),s._v(" "),e("p",[s._v("掘金或其他论坛也有很多讲vue原理的文章，我并不是想炒冷饭或什么的。我只是想记录一下自己的理解，帮助自己查漏补缺。很多东西以为自己都懂，但一讲出来就卡壳。特别是在面试的时候，一个熟悉的知识点，就是不知道该如何说起。")]),s._v(" "),e("p",[s._v("进入正题："),e("br"),s._v("\nvue之所以能在前端领域所向披靡，它的响应式原理功不可没。Vue对数据进行拦截/代理，这使它在侦测数据变化的方面变得非常敏感和非常精确。Vue采用的依赖追踪，默认就是优化状态：你动了多少数据，就触发多少更新，不多也不少。")]),s._v(" "),e("p",[s._v("所以vue的响应式原理非常值得学习，下面介绍一下我的理解。")]),s._v(" "),e("h2",{attrs:{id:"数据拦截"}},[s._v("数据拦截")]),s._v(" "),e("p",[s._v("在JavaScript中，通过使用Object.defineProperty和ES6的proxy就能进行数据的拦截，这分别也是Vue2.0和Vue3.0数据拦截的所使用的API。")]),s._v(" "),e("p",[s._v("ECMAScript5中定义了对象的两种属性：数据属性和访问器属性。进行拦截的主要是使用访问器属性。")]),s._v(" "),e("h3",{attrs:{id:"访问器属性与object-defineproperty"}},[s._v("访问器属性与Object.defineProperty()")]),s._v(" "),e("p",[s._v("访问器属性包含一对getter和setter函数，在读取访问器属性时，会调用getter函数，这个函数负责返回有效的值；在写入访问器属性时，会调用setter函数并传入新值，这个函数负责决定如何处理数据。")]),s._v(" "),e("p",[s._v("访问器属性有如下4个特性：")]),s._v(" "),e("ul",[e("li",[s._v("[[Configurable]]: 表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，默认值为true。")]),s._v(" "),e("li",[s._v("[[Enumerable]]: 表示能否通过for-in循环返回属性，默认值为true。")]),s._v(" "),e("li",[s._v("[[Get]]: 在读取属性时调用的函数，默认值为undefined。")]),s._v(" "),e("li",[s._v("[[Set]]: 在写入属性时调用的函数，默认值为undefined。")])]),s._v(" "),e("p",[s._v("访问器属性不能直接定义，必须使用Object.defineProperty()来定义。这个方法接收三个参数：属性所在的对象、属性的名字和一个描述符对象。这里使用的描述符对象就是访问器属性。")]),s._v(" "),e("p",[s._v("通过上面的知识，就能写出一个defineReactive函数来侦测数据的变化。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function defineReactive (data, key, val) {\n    Object.defineProperty(data, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n            return val\n        },\n        set(newVal) {\n            if (val === newVal) {\n                return\n            }\n            val = newVal\n        }\n    })\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("defineReactive函数接收三个参数：data(属性所在的对象)、key(属性的名字)和val(属性对应的值)。当读取到data中的key时，get函数就会被触发。设置data中的key时，set函数就被触发。")]),s._v(" "),e("h2",{attrs:{id:"依赖收集"}},[s._v("依赖收集")]),s._v(" "),e("p",[s._v("Vue能够知道当一个数据更改时，视图就跟着变化，而且使用到这个数据的其他地方也会同步刷新。是因为它们都依赖这个数据。")]),s._v(" "),e("p",[s._v("实现这种机制的技术叫做依赖收集。")]),s._v(" "),e("p",[s._v("现在有了defineProperty函数，就能把数据变成可侦听的。在模版渲染时访问某个数据，就触发它的getter函数，在触发时，进行依赖收集。")]),s._v(" "),e("p",[s._v("当某个数据进行变更了，就触发它的setter函数。在触发时，通知到依赖这个数据的地方，从而告诉render函数进行刷新。")]),s._v(" "),e("h3",{attrs:{id:"观察者模式"}},[s._v("观察者模式")]),s._v(" "),e("blockquote",[e("p",[s._v("观察者模式 在软件设计中是一个对象，维护一个依赖列表，当任何状态发生改变自动通知它们。")])]),s._v(" "),e("p",[s._v("一个数据变更，多个依赖这数据的地方作出处理。这种一对多的场景符合观察者模式。")]),s._v(" "),e("p",[s._v("在Vue依赖收集里：")]),s._v(" "),e("ul",[e("li",[s._v("依赖的数据是观察目标。")]),s._v(" "),e("li",[s._v("视图、计算数据和watcher是观察者")])]),s._v(" "),e("p",[s._v("维护一个数组dep，用于存储当前数据的依赖，并且假设window.watcher这个全局函数依赖这个数据。改写defineReactive")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function defineReactive (data, key, val) {\n+   const dep = [] // 维护一个存储依赖的数据\n    Object.defineProperty(data, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n+           dep.push(window.watcher) // 收集依赖\n            return val\n        },\n        set(newVal) {\n            if (val === newVal) {\n                return\n            }\n+           for (let i=0; i<dep.length; i++) {\n+               dep[i](newval, val) // 通知依赖\n+           }\n            val = newVal\n        }\n    })\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("根据一个函数只做一件事策略，将这部分功能解耦出来")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Dep{\n    static target: ?Watcher;\n    id: number;\n    subs: Array<Watcher>;\n    \n    constructor () {\n        this.id = uid++;\n        this.subs = []\n    }\n    \n    addSub (sub: Watcher) {\n        this.subs.push(sub)\n    }\n    \n    removeSub (sub: Wathcer) {\n        remove(this.subs, sub)\n    }\n    \n    depend () {\n        if (Dep.target) {\n            this.addSub(Dep.target)\n        }\n    }\n    \n    notify () {\n        const subs = this.subs.slice()\n        for (let i=0, l=subs.length; i<l; i++) {\n            subs[i].update()\n        }\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[s._v("改写definePeoperty函数")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function defineReactive (data, key, val) {\n+   const dep = new Dep() // 维护一个存储依赖的数据\n-   const dep = [] // 维护一个存储依赖的数据\n    Object.defineProperty(data, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n-           dep.push(window.watcher) // 收集依赖\n+           dep.depend() // 收集依赖\n            return val\n        },\n        set(newVal) {\n            if (val === newVal) {\n                return\n            }\n-           for (let i=0; i<dep.length; i++) {\n-               dep[i](newval, val) // 通知依赖\n-           }\n+           dep.notify() // 通知依赖\n            val = newVal\n        }\n    })\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h2",{attrs:{id:"watcher"}},[s._v("Watcher")]),s._v(" "),e("p",[s._v("Watcher扮演观察者的角色，进行观察者函数的包装处理。")]),s._v(" "),e("p",[s._v("从代码上看，dep.depend()进行依赖收集，在dep.depend()中的Dep.target对应着一个Watcher实例，要做的就是收集这个Watcher实例。")]),s._v(" "),e("p",[s._v("尽管会有多个观察者函数，但由于JavaScript的单线程关系，同一时刻，只能执行一个观察者函数。所以只要访问Dep.target就能知道当前的观察者函数是哪一个。")]),s._v(" "),e("p",[s._v("watcher的用法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var watcherVM = new Vue({\n    data: {\n        question: ''\n    },\n    watch: {\n        // 如果 `question` 发生改变，这个函数就会运行\n        question: function (newVal, oldVal) {...}\n    }\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("给question注册一个回调函数，只要question发生变化，就把这个回调函数执行。")]),s._v(" "),e("p",[s._v("只要把这个watcher实例添加到queston的Dep中，然后question触发时，会通知到watcher执行这个回调函数。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Watcher {\n    constructor (expOrFn, cb) {\n        this.getter = parsePath(expOrFn)\n        this.cb = cb\n        this.value() = this.get()\n    }\n    get () {\n        Dep.target = this\n        value = this.getter.call(vm, vm)\n        Dep.target = undefined\n    }\n    update () {\n        const oldValue = this.value\n        this.value = this.get()\n        this.cb.call(this.vm, this.value, oldValue)\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("首先在get函数中，把this也就是当前Watcher实例赋予Dep.target。")]),s._v(" "),e("p",[s._v("然后执行this.getter()就能拿到question，相当于读取了question的值，触发getter函数，就把当前Watcher添加到Dep中。(奇妙的想法)")]),s._v(" "),e("p",[s._v("当question的值发生改变后，就把所有的依赖都触发update方法。update方法会触发回调函数，将this.value和oldvalue传到参数中。")]),s._v(" "),e("p",[s._v("到此为止，就完成一个属性的响应。")]),s._v(" "),e("h3",{attrs:{id:"多个属性的侦听"}},[s._v("多个属性的侦听")]),s._v(" "),e("p",[s._v("其实就是递归侦测这个对象的所有属性。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function walk (obj: Object) {\n  const keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]])\n  }\n}\n\nfunction defineReactive (data, key, val) {\n    walk(val)\n    let dep = new Dep()\n    Object.defineProperty(data, key, {\n        enumerable: true,\n        configurable: true,\n        get: function () {\n            dep.depend()\n            return val\n        },\n        set: function (newVal) {\n            if(val === newVal){\n                return\n            }\n\n            dep.notify()\n            val = newVal\n        }\n    })\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h2",{attrs:{id:"侦测array"}},[s._v("侦测Array")]),s._v(" "),e("p",[s._v("对Array使用Object.definepProperty()会出现一些问题，除了重新赋值以外，其他的操作都不会被setter检测到。所以为了能检测到Array的变化，Vue做了以下操作")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("if (Array.isArray(value)) {\n    const augment = hasProto\n        ? protoAugment\n        : copyAugment\n    augment(value, arrayMethods, arrayKeys)\n    this.observeArray(value)\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("其实就是对数组做了一些增强操作。")]),s._v(" "),e("ul",[e("li",[s._v("先继承Array.prototype。")]),s._v(" "),e("li",[s._v("对继承对象上的一些方法例如push使用Object.defineProperty做拦截。")]),s._v(" "),e("li",[s._v("通过__proto__赋值到Array.prototype上")])]),s._v(" "),e("p",[s._v("例如")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 第一步\nconst arrayProto = Array.prototype\nconst arrayMethods = Object.create(arrayProto)\n\n// 第二步\nconst originalPush = arrayMethods.push;\nObject.defineProperty(arrayMethods, 'push', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value(...args) {\n        const result = originalPush.apply(this, args);\n        console.log('pushing：', args);\n        return result;\n    }\n})\n\n// 第三步\ndata.arr.__proto__ = arrayMethods\n\ndata.arr.push(1) // pushing：1  \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[s._v("总结")]),s._v(" "),e("p",[s._v("现在看官方给出的图，应该理解起来就容易了。\n"),e("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/24/1710ca1e7cdff10b~tplv-t2oaga2asx-image.image",width:"600"}})])])}),[],!1,null,null,null);n.default=t.exports}}]);