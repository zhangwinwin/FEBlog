(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{433:function(s,t,a){"use strict";a.r(t);var e=a(57),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[s._v("前言")]),s._v(" "),a("p",[s._v("从"),a("a",{attrs:{href:"https://juejin.im/post/6844904025121521678",target:"_blank",rel:"noopener noreferrer"}},[s._v("上篇"),a("OutboundLink")],1),s._v("中了解到从输入URL到页面展示要经历的几个阶段：")]),s._v(" "),a("ul",[a("li",[s._v("用户输入")]),s._v(" "),a("li",[s._v("网络请求过程")]),s._v(" "),a("li",[s._v("响应数据类型处理")]),s._v(" "),a("li",[s._v("准备渲染进程")]),s._v(" "),a("li",[s._v("提交文档")])]),s._v(" "),a("p",[s._v("这篇着重讲解后续的渲染阶段。")]),s._v(" "),a("h2",{attrs:{id:"html、css与javascript"}},[s._v("HTML、CSS与JavaScript")]),s._v(" "),a("p",[a("strong",[s._v("HTML")]),s._v("（超文本标记语言——HyperText Markup Language）是构成 Web 世界的一砖一瓦。它定义了网页内容的含义和结构。如果需要改变 HTML 的字体颜色、大小等信息，就需要用到 CSS。"),a("br"),s._v(" "),a("strong",[s._v("CSS")]),s._v(" (层叠样式表--Cascading Style Sheet），是一种 样式表 语言，用来描述 HTML 或 XML文档的呈现。CSS描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。"),a("br"),s._v(" "),a("strong",[s._v("JavaScript")]),s._v("则是可以用于修改HTML与CSS的脚本语言。"),a("br"),s._v("\n而渲染阶段就是将这三者经过中间渲染模块的处理，最终输出为屏幕上的像素。")]),s._v(" "),a("h2",{attrs:{id:"渲染流水线"}},[s._v("渲染流水线")]),s._v(" "),a("p",[s._v("大致的渲染流水线如图所示：\n"),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/30/16f56cb5e00a1637~tplv-t2oaga2asx-image.image",width:"600"}}),a("br"),s._v("\n按照渲染的时间顺序，流水线可分为如下几个子阶段：构建 DOM树、样式计算、布局阶段、分层、绘制、分块、光栅化和合成。"),a("br"),s._v("\n在每个子阶段中：")]),s._v(" "),a("ul",[a("li",[s._v("每个子阶段都有其输入的内容")]),s._v(" "),a("li",[s._v("每个子阶段都有其处理过程")]),s._v(" "),a("li",[s._v("每个子阶段都会生成输出内容")])]),s._v(" "),a("h2",{attrs:{id:"构建dom树"}},[s._v("构建DOM树")]),s._v(" "),a("p",[s._v("由于浏览器无法识别HTML，所以得将HTML转化为浏览器能够识别的结构——DOM树。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<html>\n    <head>\n        <title>文档标题</title>\n    </head>\n    <body>\n        <a href=“”>我的链接</a>\n        <h1>我的标题</h1>\n    </body>\n</html>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("比如上面的HTML经过HTML解释器后转化为下图所示的DOM树结:"),a("br"),s._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/30/16f573e5280b9cfa~tplv-t2oaga2asx-image.image",width:"600"}}),a("br"),s._v("\n在chrome的开发者工具中能更清晰的看到DOM结构。"),a("br"),s._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/30/16f5743da63cf49a~tplv-t2oaga2asx-image.image",width:"600"}}),a("br"),s._v("\n图中的document就是DOM结构，你可以看到，DOM和HTML内容几乎是一样的，但是和HTML不同的是DOM是保存在内存中树状结构，可以通过JavaScript来查询或修改其内容。"),a("br"),s._v("\n比如在id为juejin的div中添加一个p标签。"),a("br"),s._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/30/16f5748da131bbfe~tplv-t2oaga2asx-image.image",width:"600"}})]),s._v(" "),a("h2",{attrs:{id:"样式计算"}},[s._v("样式计算")]),s._v(" "),a("p",[s._v("样式计算的目的是为了计算每个DOM节点的具体样式。"),a("br"),s._v(" "),a("strong",[s._v("1、构建CSSOM")]),a("br"),s._v("\n与HTML一样，浏览器无法识别CSS样式，所以也会进行一个转换操作，将CSS样式转为浏览器能够识别的结构———styleSheets。"),a("br"),s._v("\nCSS来源主要有三种：")]),s._v(" "),a("ul",[a("li",[s._v("通过link引用的外部CSS文件")]),s._v(" "),a("li",[s._v("style标签内的CSS")]),s._v(" "),a("li",[s._v("元素的style属性内嵌的CSS")])]),s._v(" "),a("p",[s._v("在chrome的开发者工具中能更清晰的看到styleSheets结构。"),a("br"),s._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/31/16f5b4bba18ebf61~tplv-t2oaga2asx-image.image",width:"600"}})]),s._v(" "),a("p",[a("strong",[s._v("2、转换样式表中的属性值，使其标准化")]),a("br"),s._v("\n很多时候我们都会写一些CSS高级属性，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nbody { font-size: 2em }\np {color:blue;}\nspan  {display: none}\ndiv {font-weight: bold}\ndiv  p {color:green;}\ndiv {color:red; }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("图中的em、blue等都不容易被浏览器识别，所以得把它们转化为标准的计算值。"),a("br"),s._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/31/16f5b4ed40355f98~tplv-t2oaga2asx-image.image",width:"600"}})]),s._v(" "),a("p",[a("strong",[s._v("3、计算出 DOM 树中每个节点的具体样式")]),a("br"),s._v("\n接下来就要计算DOM树中的每个节点的具体样式。这就到了CSS继承与层叠规则出手。"),a("br"),s._v("\n首先，CSS继承：当元素的一个继承属性 （inherited property）没有指定值时，则取父元素的同属性的计算值 computed value。"),a("br"),s._v("\n继承属性的一个典型例子就是 color 属性。给出以下样式规则：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("p { color: green; }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("若将其应用在下面这段 HTML 代码上…")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<p>This paragraph has <em>emphasized text</em> in it.</p>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v('文本 "emphasized text" 就会呈现为绿色，因为 em 元素继承了 p 元素 color 属性的值，而没有获取 color 属性的初始值（这个 color 值用于页面没有指定 color 时的根元素）。')]),s._v(" "),a("p",[s._v("然后接着是"),a("strong",[s._v("层叠规则")]),s._v("：层叠是CSS的一个基本特征，它是一个定义了如何合并来自多个源的属性值的算法。它在CSS处于核心地位，CSS的全称层叠样式表正是强调了这一点。")]),s._v(" "),a("p",[s._v("哪些CSS实体会参与层叠计算？"),a("br"),s._v("\n只有CSS声明，就是属性名值对，会参与层叠计算。这表示包含CSS声明以外实体的@规则不参与层叠计算，比如包含描述符（descriptors）的@font-face。")]),s._v(" "),a("h2",{attrs:{id:"布局运算"}},[s._v("布局运算")]),s._v(" "),a("p",[s._v("现在有了DOM树与DOM树中的样式，但这还不足以显现页面。还需要知道DOM树中每个节点的几何位置。"),a("br"),s._v("\nChrome 在布局阶段需要完成两个任务：创建布局树和布局计算。")]),s._v(" "),a("p",[a("strong",[s._v("1、创建布局树")]),a("br"),s._v("\n在DOM树中有很多元素标签是不可见的。比如head标签，使用display：none的元素。所以还得构建可见的布局树")]),s._v(" "),a("ul",[a("li",[s._v("遍历 DOM 树中的所有可见节点，并把这些节点加到布局中；")]),s._v(" "),a("li",[s._v("而不可见的节点会被布局树忽略掉，如 head 标签下面的全部内容，再比如 body.p.span 这个元素，因为它的属性包含 dispaly:none，所以这个元素也没有被包进布局树。\n"),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/31/16f5b5f27801ea18~tplv-t2oaga2asx-image.image",width:"600"}})])]),s._v(" "),a("p",[a("strong",[s._v("2、布局计算")]),a("br"),s._v("\n接下来计算布局树节点的坐标位置。")]),s._v(" "),a("p",[a("strong",[s._v("未完待续")])])])}),[],!1,null,null,null);t.default=r.exports}}]);