(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{425:function(s,e,a){"use strict";a.r(e);var n=a(57),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[s._v("前言")]),s._v(" "),a("p",[s._v("符号是"),a("code",[s._v("ES6")]),s._v("新增的基本值类型，是"),a("code",[s._v("JavaScript")]),s._v("中的第7种数据类型。符号是独一无二的数据类型，而且不具备字面量表示形式。 符号起初被设计用于创建对象私有成员。在符号诞生之前，将字符串作为属性名称导致属性可以被轻易访问，无论命名规则如何。而“私有名称”意味着开发者可以创建非字符串类型的属性名称，由此可以防止使用常规手段来探查这些名称。")]),s._v(" "),a("h2",{attrs:{id:"symbol"}},[s._v("Symbol")]),s._v(" "),a("p",[s._v("符号有3种类型，每种类型是用不同的方式访问：")]),s._v(" "),a("ul",[a("li",[s._v("本地符号：通过内置符号包装对象创建，并通过存储引用或反射来访问。")]),s._v(" "),a("li",[s._v("全局符号：通过"),a("code",[s._v("API")]),s._v("创建，并跨代码域共享。")]),s._v(" "),a("li",[s._v("内部符号：内置于"),a("code",[s._v("JavaScript")]),s._v("中，用于定义内部语言行为。")])]),s._v(" "),a("h3",{attrs:{id:"本地符号"}},[s._v("本地符号")]),s._v(" "),a("p",[s._v("可以使用符号包装对象来创建符号：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const symbol = Symbol();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不能使用"),a("code",[s._v("new")]),s._v("关键字创建符号，否则会报错:\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba63a242d4554fc097f4db12a2ac1eff~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[a("code",[s._v("Symbol")]),s._v("还可以接受一个额外的参数用于描述符号值，该描述并不能用来访问对应属性， 但它能用于调试。符号的描述信息被存储在内部属性 "),a("code",[s._v("[Description]]")]),s._v("，当符号的"),a("code",[s._v("toString()")]),s._v("方法被显式或隐式调用时，该属性都会被读取。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const symbol = Symbol('unique symbol');\nconsole.log(symbol) // Symbol('unique symbol')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("console.log()")]),s._v("隐式调用了"),a("code",[s._v("symbol")]),s._v("变量的"),a("code",[s._v("toString()")]),s._v("方法，于是描述信息就被输出到日志。此外没有任何办法可以从代码中直接访问 "),a("code",[s._v("[[Description]]")]),s._v("属性")]),s._v(" "),a("p",[s._v("符号值是独一无二的，描述并不会影响这一特性：\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c604557a4f604957b25ce5ad30bc6956~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("符号可以用作对象的属性名，为了访问对应的符号属性，需要保存创建属性的符号值引用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const age = Symbol('age')\nconst person = {\n    name: 'zhang',\n    [age]: '25'\n}\nconsole.log(person[age])\n// '25'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("注意，"),a("code",[s._v("for...in")]),s._v("、"),a("code",[s._v("Object.keys")]),s._v("和"),a("code",[s._v("Object.getOwnPropertyNames")]),s._v("均无法获取符号属性。而且符号属性也不会出现在"),a("code",[s._v("JSON")]),s._v("字符串化的结果中：\n"),a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/880c287ade8a47e2a8f493886a2f39e7~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("但这不意味着符号是一种隐藏属性，它只是简单的隐藏。可以通过"),a("code",[s._v("Object.getOwnPropertySymbols")]),s._v("获取给定对象中所有用作属性名的符号值。\n"),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24c37a754e1049e988df81145ffd17f3~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("类型转换是"),a("code",[s._v("JS")]),s._v("语言重要的一部分，能够非常灵活地将一种数据类型转换为另一种。然而符号类型在进行转换时非常不灵活，因为其他类型缺乏与符号值的合理等价，尤其是符号值无法被转换为字符串值或数值。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const newAge = age + 2;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/61618734b5a8420ea54f4cd0afc1809f~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"【实际用法】"}},[s._v("【实际用法】")]),s._v(" "),a("p",[s._v("1、符号可以用在将对象映射到"),a("code",[s._v("dom")]),s._v("元素中，比如：将时间的"),a("code",[s._v("API")]),s._v("对象关联到"),a("code",[s._v("DOM")]),s._v("元素上。由于它的独一无二的特性，所以不用担心其他库用到这个属性，或者将来语言本身使用到这个属性，可以放心大胆的映射。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const cache = Symbol('time')\nfunction createTime(el) {\n    if (cache in el) {\n        return el[cache]\n    }\n    const api = el[cache] = {\n    \t// timeApi\n    }\n    return api\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("搭配上"),a("code",[s._v("ES6")]),s._v("的"),a("code",[s._v("WeakMap")]),s._v("那就更配了，它可以将对象映射到其他对象上，且不需要借助数据或在所有应用对象上添加额外属性，而且使用传统的数组来存储的话，在长时间运行的应用中，表会变的越来越大，查询数据就会大大下降。而"),a("code",[s._v("WeakMap")]),s._v("查询的时间复杂度是常量"),a("code",[s._v("O(1)")]),s._v("。")]),s._v(" "),a("p",[s._v("2、用符号定义协议"),a("br"),s._v("\n协议是一种定义行为的通信契约或约定，具体到符号：如果一个库使用一个符号值，那么遵循这个库约定的对象也能够使用这个符号值。")]),s._v(" "),a("p",[s._v("比如说，使用"),a("code",[s._v("toJSON")]),s._v("方法来决定对象通过"),a("code",[s._v("JSON.stringify")]),s._v("序列化的结果。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const person = {\n    name: 'zhang',\n    toJSON: () => ({\n        key: 'value'\n    })\n}\nconsole.log(JSON.stringify(person))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da12a760c2b14e62a2bf58f123935ca9~tplv-k3u1fbpfcp-watermark.image",alt:""}}),s._v("\n然而，"),a("code",[s._v("toJSON")]),s._v("不是一个函数，那么就按整个对象都会序列化，包括"),a("code",[s._v("toJSON")]),s._v("属性：\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6762c3eba821443a90297097c831a403~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("之所以会出现这个情况，是因为依赖常规属性来定义行为。使用符号来实现"),a("code",[s._v("toJSON")]),s._v("会更好，因为这样不会与其他对象属性名产生冲突。因为符号是独一无二的，不会被序列化。所以符号值很适合对象用来定义自己的序列化逻辑。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const json = Symbol('unique JSON')\nconst person = {\n    name: 'zhang',\n    [json]: () => ({\n        key: 'value'\n    })\n}\nfunction stringify (target) {\n    if (json in target) {\n        return JSON.stringify(target[json]())\n    }\n    return JSON.stringift(target)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"全局符号"}},[s._v("全局符号")]),s._v(" "),a("p",[s._v("全局注册的符号，可以在整个代码域中访问。代码域是指任何一种"),a("code",[s._v("JavaScript")]),s._v("执行上下文，比如说：")]),s._v(" "),a("ul",[a("li",[s._v("应用所在页面、页面中的"),a("code",[s._v("<ifame>")])]),s._v(" "),a("li",[s._v("通过"),a("code",[s._v("eval")]),s._v("执行的脚本，")]),s._v(" "),a("li",[s._v("以及各种"),a("code",[s._v("web workers")]),s._v("。这些执行上下文都有自己独有的全局对象。\n比如，定义在页面的"),a("code",[s._v("window")]),s._v("对象上的全局变量不可在"),a("code",[s._v("ServiceWorker")]),s._v("中使用，但全局符号在所有代码域中是共享的。")])]),s._v(" "),a("p",[s._v("有两种方法可以访问运行环境下的全局符号注册表：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Symbol.for")])]),s._v(" "),a("li",[a("code",[s._v("Symbol.keyFor")])])]),s._v(" "),a("h4",{attrs:{id:"_1、symbol-for"}},[s._v("1、Symbol.for")]),s._v(" "),a("p",[a("code",[s._v("Symbol.for(key)")]),s._v("可以用来查找运行环境下的全局符号注册表中的"),a("code",[s._v("key")]),s._v("值。如果全局注册表中存在所传入"),a("code",[s._v("key")]),s._v("对应的符号值，则返回该值。如果不存在，则用传入的"),a("code",[s._v("key")]),s._v("创建一个并在全局中注册。也就是说"),a("code",[s._v("Symbol.for(key)")]),s._v("是幂等的。\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc2e9cd4105e4a53ac4f12a9dd68e029~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("全局注册表通过"),a("code",[s._v("key")]),s._v("保存符号。注意，当符号被创建并添加到全局注册表时，"),a("code",[s._v("key")]),s._v("会用作它的描述。")]),s._v(" "),a("h4",{attrs:{id:"_2、symbol-keyfor-symbol"}},[s._v("2、Symbol.keyFor(symbol)")]),s._v(" "),a("p",[a("code",[s._v("Symbol.keyFor(symbol)")]),s._v("能够返回一个符号类型的符号值在添加到全局注册表时所关联的"),a("code",[s._v("key")]),s._v("。\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f1475a4354143d2921612a24b412153~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("如果给定的符号值不在全局符号注册表中，则返回"),a("code",[s._v("undefined")]),s._v(" "),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9618982756c14f5d838cffac0053ed04~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("别忘了，符号的独一无二的特性\n"),a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c2c16cf90b2438ab194f92ef2f98bb9~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("p",[s._v("全局注册表意味着整个代码域内都能访问符号值，而且在任何代码域内返回的都是同一个对象的引用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var frame = document.appendChild(document.createElement('iframe'))\nvar symbol1 = window.Symbol.for('example')\nvar symbol2 = frame.contentWindow.Symbol.for('example')\nconsole.log(symbol1 === symbol2)\n// true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("使用全局可用的符号值时需要做好权衡。一方面，全局符号使得类库能够方便地暴露其中的符号值。另一方面，类库也可能会使用本地符号在其"),a("code",[s._v("API")]),s._v("上暴露符号值。显然当符号需要在任意两个代码作用域共享时，全局符号注册表就非常有用了。同时，使用全局符号注册表的"),a("code",[s._v("API")]),s._v("可以不必存储符号值的引用，因为用一个给定的"),a("code",[s._v("key")]),s._v("值会返回相同的符号值。")]),s._v(" "),a("h3",{attrs:{id:"内部符号"}},[s._v("内部符号")]),s._v(" "),a("p",[s._v("这些符号值是语言自带的，它们提供了内部语言行为的钩子，对原先属于语言内部逻辑的部分进行了进一步的暴露，允许使用符号类型的原型属性来定义某些对象的基础行为。")]),s._v(" "),a("p",[s._v("内部符号是跨代码域共享的")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" frame "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'iframe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("frame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nSymbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" frame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("contentWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("iterator\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("但它们不在全局注册表上")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log(Symbol.keyFor(Symbol.iterator))\n// undefined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_1、symbol-hasinstance"}},[s._v("1、Symbol.hasInstance")]),s._v(" "),a("p",[s._v("每个函数都具有一个"),a("code",[s._v("Symbol.hasInstance")]),s._v("方法，用于判断指定对象是否为本函数的一个实例。这个方法定义在"),a("code",[s._v("Function.prototype")]),s._v("上，因此所有函数都继承了面对"),a("code",[s._v("instanceof")]),s._v("运算符时的默认行为。"),a("code",[s._v("Symbol.hasInstance")]),s._v("属性自身是不可写入、不可配置、不可枚举的，从而保证它不会被错误地重写。"),a("code",[s._v("Symbol.hasInstance")]),s._v("方法只接受单个参数，即需要检测的值。如果该值是本函数的一个实例，则方法会返回"),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("obj instanceof Array\n// 等价于\nArray[Symbol.hasInstance](obj)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("ES6")]),s._v("从本质上将"),a("code",[s._v("instanceof")]),s._v("运算符重定义为上述方法调用的简写语法，这样使用"),a("code",[s._v("instanceof")]),s._v("便会触发一次方法调用，实际上允许你改变该运算符的工作。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function MyObjecyt () {}\nObject.defineProperty(MyObject, Symbol.hasInstance, {\n    value () {\n        return false\n    }\n})\nconst obj = new MyObject();\nconsole.log(obj instanceof MyObject); // false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_2、symbol-isconcatspreadable"}},[s._v("2、Symbol.isConcatSpreadable")]),s._v(" "),a("p",[a("code",[s._v("Symbol.isConcatSpreadable")]),s._v("属性是一个布尔类型的属性，它表示目标对象拥有长度属性与数值类型的键、并且数值类型键所对应的属性值在参与"),a("code",[s._v("concat()")]),s._v("调用时需要被分离为个体。 该符号与其他符号不同，默认情况下并不会作为任意常规对象的属性。它只出现在特定类型的对象上，用来标示该对象在作为"),a("code",[s._v("concat()")]),s._v("参数时应如何工作，从而有效改变该对象的默认行为。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let greeting = {\n    0: 'are',\n    1: 'you',\n    length: 2,\n    [Symbol.isConcatSpreadable]: true\n}\nlet message = ['how'].concat(greeting)\nconsole.log(messge.length) // 3\nconsole.log(message) // ['how', 'are', 'you']\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以用它来定义任意类型的对象，让该对象在参与"),a("code",[s._v("concat()")]),s._v("调用时能够表现得像数组一样。")]),s._v(" "),a("h4",{attrs:{id:"_3、symbol-toprimitive"}},[s._v("3、Symbol.toPrimitive")]),s._v(" "),a("p",[a("code",[s._v("JS")]),s._v("经常在使用特定运算符的时候试图进行隐式转换，以便将对象转换为基本类型值。而"),a("code",[s._v("ES6")]),s._v("则通过"),a("code",[s._v("Symbol.toPrimitive")]),s._v("方法将其暴露出来，以便让对应方法可以被修改。可以将一个函数赋予给它，该函数将决定对象如何转换成基本值。函数接受一个可以为"),a("code",[s._v("string")]),s._v("、"),a("code",[s._v("number")]),s._v("或者"),a("code",[s._v("default")]),s._v("的"),a("code",[s._v("hint")]),s._v("参数，以指定所要转换成的初始类型。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var changing = {\n    [Symbol.toPrimitive] (hint) {\n        if (hint === 'number') {\n            return Infinity\n        } else if (hint === 'string') {\n            return 'a lot'\n        }\n        return '[object changing]'\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6dcc6950c3a540c1b983f7e738078cdd~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_4、symbol-match"}},[s._v("4、Symbol.match")]),s._v(" "),a("p",[s._v("如果将一个正则表达式的"),a("code",[s._v("Symbol.match")]),s._v("属性设为"),a("code",[s._v("false")]),s._v("，当传入"),a("code",[s._v(".startsWith")]),s._v("、"),a("code",[s._v(".endsWith")]),s._v("或者"),a("code",[s._v(".includes")]),s._v("时，该正则表达式会被当作字符串字面量。\n"),a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b09f43de45914c46bea792d2bc7eca2a~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_5、symbol-iterator"}},[s._v("5、Symbol.iterator")]),s._v(" "),a("p",[a("code",[s._v("ES6")]),s._v("引入了两个新的概念：迭代器与可迭代对象。这两个概念可以为任何对象定义迭代行为。")]),s._v(" "),a("p",[s._v("给普通对象的"),a("code",[s._v("Symbol.iterator")]),s._v("属性赋予一个函数，就可以把这个普通对象转为可迭代对象。而且每次迭代都会调用赋予给"),a("code",[s._v("Symbol.iterator")]),s._v("函数。")]),s._v(" "),a("p",[s._v("赋予给"),a("code",[s._v("Symbol.iterator")]),s._v("的函数必须返回一个对象，该对象必须遵守迭代器协议。这个协议规定了如何从可迭代对象中取值。根据协议，迭代函数返回的对象必须有一个"),a("code",[s._v("next")]),s._v("方法。"),a("code",[s._v("next")]),s._v("方法不接受参数，并且返回一个包含以下两个属性的对象：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("value")]),s._v("-当前值")]),s._v(" "),a("li",[a("code",[s._v("done")]),s._v("-"),a("code",[s._v("boolean")]),s._v("，表示该迭代是否结束\n比如：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var items = ['i', 't', 'e', 'r', 'a', 't', 'o', 'r']\nvar sequence = {\n    [Symbol.iterator] () {\n        let i = 0\n        return {\n            next () {\n                const value = items[i]\n                i++\n                const done = i > items.length\n                return { value, done }\n            }\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("code",[s._v("ES6")]),s._v("新增几种方法去迭代可迭代对象：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("for..of")])]),s._v(" "),a("li",[s._v("扩展运算符...")]),s._v(" "),a("li",[a("code",[s._v("Array.from")]),s._v(" "),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/269047c945df4003a5028a72ff7553e0~tplv-k3u1fbpfcp-watermark.image",alt:""}})])]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("ES6")]),s._v("中，"),a("code",[s._v("Array")]),s._v("、"),a("code",[s._v("String")]),s._v("、"),a("code",[s._v("DOM")]),s._v("的"),a("code",[s._v("NodeList")]),s._v("以及"),a("code",[s._v("arguments")]),s._v("默认都是可迭代对象。")]),s._v(" "),a("p",[s._v("这两个协议的优势在于它们提供了有意义的方式，让使用者能够轻松地迭代集合和类似数组的对象。")]),s._v(" "),a("p",[s._v("将普通对象转换为可迭代对象有非常多的使用场景。通常来说，使用对象来表示字符串键与任意值之间的映射。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var colors = {\n    green: '#0e0'\n    orange: '#f50',\n    pink: '#e07'\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("有时候需要遍历其中的颜色名，这时给"),a("code",[s._v("Symbol.iterator")]),s._v("赋值为"),a("code",[s._v("colors")]),s._v("产生"),a("code",[s._v("[key, value]")]),s._v("序列的可迭代能力")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var colors = {\n    green: '#0e0',\n    orange: '#f50',\n    pink: '#e07',\n    [Symbol.iterator] () {\n        const keys = Object.keys(colors)\n        return {\n            next () {\n                const done = keys.length === 0\n                const key = keys.shift()\n                return {\n                    done,\n                    value: [key, colors[key]]\n                }\n            }\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e0dc3c43de54f3fb543f8580b824a09~tplv-k3u1fbpfcp-watermark.image",alt:""}})])])}),[],!1,null,null,null);e.default=t.exports}}]);